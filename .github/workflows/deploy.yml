name: Docker Deploy to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # Docker Hub のリポジトリ
  DOCKER_HUB_IMAGE: ayumu277/chatbot-app
  # Azure App Service
  AZURE_WEBAPP_NAME: chatbot-app-container
  AZURE_RESOURCE_GROUP: chatbot-app-new_group

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ── Docker レイヤーキャッシュ ──────────────────────────────────────────
      - name: Cache Buildx layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ayumu277
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up QEMU (for multi-platform build)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: docker.io/${{ env.DOCKER_HUB_IMAGE }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write

    steps:
      # ── Azure へログイン ───────────────────────────────────────────────────
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: SERVICE_PRINCIPAL

      # ── コンテナ設定＆デプロイ ─────────────────────────────────────────────
      - name: Deploy to Azure Web App (Container)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: docker.io/${{ env.DOCKER_HUB_IMAGE }}:latest

  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write

    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: SERVICE_PRINCIPAL

      - name: Get App URL
        id: get-url
        run: |
          echo "APP_URL=https://$(az webapp show \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --query defaultHostName -o tsv)" >> "$GITHUB_OUTPUT"

      - name: Health check (max 15 attempts)
        run: |
          for i in $(seq 1 15); do
            code=$(curl -s -o /dev/null -w "%{http_code}" ${{ steps.get-url.outputs.APP_URL }})
            echo "Attempt $i: HTTP $code"
            if [ "$code" = "200" ]; then
              echo "✅ Healthy!"
              exit 0
            fi
            sleep 10
          done
          echo "❌ Health check failed"
          exit 1
