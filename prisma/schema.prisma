// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String?       @unique
  name          String?
  image         String?
  isGuest       Boolean       @default(false)
  guestToken    String?       @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  sessions      ChatSession[]

  @@map("users")
}

model ChatSession {
  id        String   @id @default(uuid())
  title     String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  ChatMessage[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("chat_sessions")
}

model ChatMessage {
  id           String      @id @default(uuid())
  sessionId    String
  role         String      // "user" or "assistant"
  content      String      @db.NVarChar(Max)
  timestamp    DateTime    @default(now())
  imageBase64  String?     @db.NVarChar(Max)
  imagePreview String?     @db.NVarChar(Max)

  session      ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}
